{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Components\\ProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Components\\ProgressBar.vue","mtime":1558328756000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport PageTitle from \"../../Layout/Components/PageTitle.vue\";\n\nexport default {\n  components: {\n    PageTitle,\n  },\n  data: () => ({\n    heading: 'Progress Bar',\n    subheading: 'You can use the progress bars on their own or in combination with other widgets.',\n    icon: 'pe-7s-filter icon-gradient bg-grow-early',\n\n    counter: 45,\n    max: 100,\n    bars: [\n      {variant: 'success', value: 75},\n      {variant: 'info', value: 75},\n      {variant: 'warning', value: 75},\n      {variant: 'danger', value: 75},\n      {variant: 'primary', value: 75},\n      {variant: 'secondary', value: 75},\n      {variant: 'dark', value: 75},\n      {variant: 'alternate', value: 75},\n      {variant: 'focus', value: 75}\n    ],\n    timer: null,\n    striped: true,\n    value: 75\n  }),\n\n  methods: {\n    clicked () {\n      this.counter = Math.random() * this.max\n      console.log('Change progress to ' +\n        Math.round(this.counter * 100) / 100)\n    }\n  },\n  mounted () {\n    this.timer = setInterval(() => {\n      this.bars.forEach(bar => bar.value = 25 + (Math.random() * 75))\n    }, 2000)\n  },\n  beforeDestroy () {\n    clearInterval(this.timer)\n    this.timer = null\n  }\n}\n",{"version":3,"sources":["ProgressBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProgressBar.vue","sourceRoot":"src/DemoPages/Components","sourcesContent":["<template>\n  <div>\n    <page-title :heading=heading :subheading=subheading :icon=icon></page-title>\n    <b-row>\n      <b-col md=\"6\">\n        <b-card title=\"Basic\" class=\"mb-3\">\n          <b-progress :value=\"counter\" :max=\"max\" show-progress animated></b-progress>\n          <b-progress class=\"mt-1\" :max=\"max\" show-value>\n            <b-progress-bar :value=\"counter*(6/10)\" variant=\"success\"></b-progress-bar>\n            <b-progress-bar :value=\"counter*(2.5/10)\" variant=\"warning\"></b-progress-bar>\n            <b-progress-bar :value=\"counter*(1.5/10)\" variant=\"danger\"></b-progress-bar>\n          </b-progress>\n          <b-btn class=\"mt-4\" @click=\"clicked\">Click me</b-btn>\n        </b-card>\n        <b-card title=\"Colors\" class=\"mb-3\">\n          <div v-for=\"bar in bars\" class=\"row mb-1\">\n            <div class=\"col-sm-2\">{{ bar.variant }}:</div>\n            <div class=\"col-sm-10 pt-1\">\n              <b-progress :value=\"bar.value\"\n                          :variant=\"bar.variant\"\n                          :key=\"bar.variant\"\n              ></b-progress>\n            </div>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col md=\"6\">\n        <b-card title=\"Sizing\" class=\"mb-3\">\n          <b-progress :value=\"value\" show-progress class=\"mb-3\"></b-progress>\n          <b-progress height=\"2rem\" :value=\"value\" show-progress class=\"mb-2\"></b-progress>\n          <b-progress height=\"20px\" :value=\"value\" show-progress class=\"mb-2\"></b-progress>\n          <b-progress height=\"2px\" :value=\"value\"></b-progress>\n        </b-card>\n        <b-card title=\"Striped\" class=\"mb-3\">\n          <b-progress :value=\"25\" variant=\"success\" :striped=\"striped\" class=\"mb-2\"></b-progress>\n          <b-progress :value=\"50\" variant=\"info\" :striped=\"striped\" class=\"mb-2\"></b-progress>\n          <b-progress :value=\"75\" variant=\"warning\" :striped=\"striped\" class=\"mb-2\"></b-progress>\n          <b-progress :value=\"100\" variant=\"danger\" :striped=\"striped\" class=\"mb-2\"></b-progress>\n          <b-button variant=\"secondary\" @click=\"striped = !striped\">\n            {{ striped ? 'Remove' : 'Add'}} Striped\n          </b-button>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\n\n  import PageTitle from \"../../Layout/Components/PageTitle.vue\";\n\n  export default {\n    components: {\n      PageTitle,\n    },\n    data: () => ({\n      heading: 'Progress Bar',\n      subheading: 'You can use the progress bars on their own or in combination with other widgets.',\n      icon: 'pe-7s-filter icon-gradient bg-grow-early',\n\n      counter: 45,\n      max: 100,\n      bars: [\n        {variant: 'success', value: 75},\n        {variant: 'info', value: 75},\n        {variant: 'warning', value: 75},\n        {variant: 'danger', value: 75},\n        {variant: 'primary', value: 75},\n        {variant: 'secondary', value: 75},\n        {variant: 'dark', value: 75},\n        {variant: 'alternate', value: 75},\n        {variant: 'focus', value: 75}\n      ],\n      timer: null,\n      striped: true,\n      value: 75\n    }),\n\n    methods: {\n      clicked () {\n        this.counter = Math.random() * this.max\n        console.log('Change progress to ' +\n          Math.round(this.counter * 100) / 100)\n      }\n    },\n    mounted () {\n      this.timer = setInterval(() => {\n        this.bars.forEach(bar => bar.value = 25 + (Math.random() * 75))\n      }, 2000)\n    },\n    beforeDestroy () {\n      clearInterval(this.timer)\n      this.timer = null\n    }\n  }\n</script>\n"]}]}