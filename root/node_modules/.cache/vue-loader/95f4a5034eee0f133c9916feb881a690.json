{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\Layout\\Components\\Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\Layout\\Components\\Sidebar.vue","mtime":1606572491285},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {SidebarMenu} from 'vue-sidebar-menu'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n    components: {\n        SidebarMenu,\n        VuePerfectScrollbar\n    },\n    data() {\n        return {\n            isOpen: false,\n            sidebarActive: false,\n\n            menu: [\n                 {\n                    header: true,\n                    title: 'Main Navigation',\n                },\n                {\n                    title: 'Home',\n                    icon: 'pe-7s-home',\n                    href: '/',\n                },\n                 {\n                    title: 'Video Analysis',\n                    icon: 'pe-7s-video',\n                    href: '/VideoPlayer',\n                },\n\n            ],\n            collapsed: true,\n\n            windowWidth: 0,\n\n        }\n    },\n    props: {\n        sidebarbg: String,\n    },\n    methods: {\n\n        toggleBodyClass(className) {\n            const el = document.body;\n            this.isOpen = !this.isOpen;\n\n            if (this.isOpen) {\n                el.classList.add(className);\n            } else {\n                el.classList.remove(className);\n            }\n        },\n        toggleSidebarHover(add, className) {\n            const el = document.body;\n            this.sidebarActive = !this.sidebarActive;\n\n            this.windowWidth = document.documentElement.clientWidth;\n\n            if (this.windowWidth > '992') {\n                if (add === 'add') {\n                    el.classList.add(className);\n                } else {\n                    el.classList.remove(className);\n                }\n            }\n        },\n        getWindowWidth() {\n            const el = document.body;\n\n            this.windowWidth = document.documentElement.clientWidth;\n\n            if (this.windowWidth < '1350') {\n                el.classList.add('closed-sidebar', 'closed-sidebar-md');\n            } else {\n                el.classList.remove('closed-sidebar', 'closed-sidebar-md');\n            }\n        },\n    },\n    mounted() {\n        this.$nextTick(function () {\n            window.addEventListener('resize', this.getWindowWidth);\n\n            //Init\n            this.getWindowWidth()\n        })\n    },\n\n    beforeDestroy() {\n        window.removeEventListener('resize', this.getWindowWidth);\n    }\n}\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/Layout/Components","sourcesContent":["<template>\n  <div\n    class=\"app-sidebar sidebar-shadow\"\n    @mouseover=\"toggleSidebarHover('add', 'closed-sidebar-open')\"\n    @mouseleave=\"toggleSidebarHover('remove', 'closed-sidebar-open')\"\n  >\n    <div class=\"app-header__logo\">\n      <!-- <div class=\"logo-src\"/> -->\n      <div class=\"header__pane ml-auto\">\n        <button\n          type=\"button\"\n          class=\"hamburger close-sidebar-btn hamburger--elastic\"\n          v-bind:class=\"{ 'is-active': isOpen }\"\n          @click=\"toggleBodyClass('closed-sidebar')\"\n        >\n          <span class=\"hamburger-box\">\n            <span class=\"hamburger-inner\"></span>\n          </span>\n        </button>\n      </div>\n    </div>\n    <div class=\"app-sidebar-content\">\n      <VuePerfectScrollbar class=\"app-sidebar-scroll\" v-once>\n        <sidebar-menu showOneChild :menu=\"menu\" />\n      </VuePerfectScrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\n    import {SidebarMenu} from 'vue-sidebar-menu'\n    import VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\n    export default {\n        components: {\n            SidebarMenu,\n            VuePerfectScrollbar\n        },\n        data() {\n            return {\n                isOpen: false,\n                sidebarActive: false,\n\n                menu: [\n                     {\n                        header: true,\n                        title: 'Main Navigation',\n                    },\n                    {\n                        title: 'Home',\n                        icon: 'pe-7s-home',\n                        href: '/',\n                    },\n                     {\n                        title: 'Video Analysis',\n                        icon: 'pe-7s-video',\n                        href: '/VideoPlayer',\n                    },\n\n                ],\n                collapsed: true,\n\n                windowWidth: 0,\n\n            }\n        },\n        props: {\n            sidebarbg: String,\n        },\n        methods: {\n\n            toggleBodyClass(className) {\n                const el = document.body;\n                this.isOpen = !this.isOpen;\n\n                if (this.isOpen) {\n                    el.classList.add(className);\n                } else {\n                    el.classList.remove(className);\n                }\n            },\n            toggleSidebarHover(add, className) {\n                const el = document.body;\n                this.sidebarActive = !this.sidebarActive;\n\n                this.windowWidth = document.documentElement.clientWidth;\n\n                if (this.windowWidth > '992') {\n                    if (add === 'add') {\n                        el.classList.add(className);\n                    } else {\n                        el.classList.remove(className);\n                    }\n                }\n            },\n            getWindowWidth() {\n                const el = document.body;\n\n                this.windowWidth = document.documentElement.clientWidth;\n\n                if (this.windowWidth < '1350') {\n                    el.classList.add('closed-sidebar', 'closed-sidebar-md');\n                } else {\n                    el.classList.remove('closed-sidebar', 'closed-sidebar-md');\n                }\n            },\n        },\n        mounted() {\n            this.$nextTick(function () {\n                window.addEventListener('resize', this.getWindowWidth);\n\n                //Init\n                this.getWindowWidth()\n            })\n        },\n\n        beforeDestroy() {\n            window.removeEventListener('resize', this.getWindowWidth);\n        }\n    }\n</script>\n"]}]}