{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Components\\ProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Components\\ProgressBar.vue","mtime":1558328756000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport PageTitle from \"../../Layout/Components/PageTitle.vue\";\n\nexport default {\n  components: {\n    PageTitle,\n  },\n  data: () => ({\n    heading: 'Progress Bar',\n    subheading: 'You can use the progress bars on their own or in combination with other widgets.',\n    icon: 'pe-7s-filter icon-gradient bg-grow-early',\n\n    counter: 45,\n    max: 100,\n    bars: [\n      {variant: 'success', value: 75},\n      {variant: 'info', value: 75},\n      {variant: 'warning', value: 75},\n      {variant: 'danger', value: 75},\n      {variant: 'primary', value: 75},\n      {variant: 'secondary', value: 75},\n      {variant: 'dark', value: 75},\n      {variant: 'alternate', value: 75},\n      {variant: 'focus', value: 75}\n    ],\n    timer: null,\n    striped: true,\n    value: 75\n  }),\n\n  methods: {\n    clicked () {\n      this.counter = Math.random() * this.max\n      console.log('Change progress to ' +\n        Math.round(this.counter * 100) / 100)\n    }\n  },\n  mounted () {\n    this.timer = setInterval(() => {\n      this.bars.forEach(bar => bar.value = 25 + (Math.random() * 75))\n    }, 2000)\n  },\n  beforeDestroy () {\n    clearInterval(this.timer)\n    this.timer = null\n  }\n}\n",null]}