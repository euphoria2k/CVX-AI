{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CobwebParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CobwebParticles.vue","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nexport default {\n  name: \"CobwebParticles\",\n  components: {\n    CanvasComp: CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited: function canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize: function canvasResize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown: function canvasMouseDown(e) {},\n    createProton: function createProton(canvas) {\n      var width = canvas.width;\n      var height = canvas.height;\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num ? new Proton.Span(this.num) : new Proton.Span(100), new Proton.Span(0.05, 0.2));\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 4));\n      emitter.addInitialize(new Proton.Life(Infinity));\n      var pointZone = new Proton.Position(new Proton.RectZone(0, 0, width, height));\n      emitter.addInitialize(pointZone);\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(0.3, 0.6), new Proton.Span(0, 360), \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n      emitter.addBehaviour(new Proton.Color(this.color || \"#333\"));\n      this.crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, width, height), \"cross\");\n      emitter.addBehaviour(this.crossZoneBehaviour);\n      emitter.emit(\"once\");\n      emitter.damping = 0;\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas, emitter));\n    },\n    createRenderer: function createRenderer(canvas, emitter) {\n      var _this = this;\n\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      var R = 140;\n\n      renderer.onProtonUpdateAfter = function () {\n        var particles = emitter.particles;\n\n        for (var i = 0; i < particles.length; i++) {\n          for (var j = i + 1; j < particles.length; j++) {\n            var pA = particles[i];\n            var pB = particles[j];\n            var dis = pA.p.distanceTo(pB.p);\n\n            if (dis < R) {\n              var alpha = (1 - dis / R) * 0.5;\n              context.strokeStyle = getColor(_this.color, alpha) || \"rgba(3, 3, 3, \".concat(alpha, \")\");\n              context.beginPath();\n              context.moveTo(pA.p.x, pA.p.y);\n              context.lineTo(pB.p.x, pB.p.y);\n              context.closePath();\n              context.stroke();\n            }\n          }\n        }\n      };\n\n      return renderer;\n    },\n    renderProton: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};",{"version":3,"sources":["CobwebParticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"CobwebParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(100),\n        new Proton.Span(0.05, 0.2)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 4));\n      emitter.addInitialize(new Proton.Life(Infinity));\n      const pointZone = new Proton.Position(\n        new Proton.RectZone(0, 0, width, height)\n      );\n      emitter.addInitialize(pointZone);\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(0.3, 0.6),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n      emitter.addBehaviour(new Proton.Color(this.color || \"#333\"));\n      this.crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, width, height),\n        \"cross\"\n      );\n      emitter.addBehaviour(this.crossZoneBehaviour);\n\n      emitter.emit(\"once\");\n      emitter.damping = 0;\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas, emitter));\n    },\n    createRenderer(canvas, emitter) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      const R = 140;\n\n      renderer.onProtonUpdateAfter = () => {\n        let particles = emitter.particles;\n\n        for (let i = 0; i < particles.length; i++) {\n          for (let j = i + 1; j < particles.length; j++) {\n            let pA = particles[i];\n            let pB = particles[j];\n            let dis = pA.p.distanceTo(pB.p);\n\n            if (dis < R) {\n              let alpha = (1 - dis / R) * 0.5;\n              context.strokeStyle =\n                getColor(this.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n              context.beginPath();\n              context.moveTo(pA.p.x, pA.p.y);\n              context.lineTo(pB.p.x, pB.p.y);\n              context.closePath();\n              context.stroke();\n            }\n          }\n        }\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}