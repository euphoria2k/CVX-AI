{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CustomParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\CustomParticles.vue","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:/Users/HP/Documents/CVX_AI_WebUI/root/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nvar colors = [\"#529B88\", \"#CDD180\", \"#FFFA32\", \"#FB6255\", \"#FB4A53\", \"#FF4E50\", \"#F9D423\"];\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp: CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited: function canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize: function canvasResize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown: function canvasMouseDown(e) {},\n    getCompositeOperation: function getCompositeOperation() {\n      var globalCompositeOperation = this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n    getProp: function getProp(key, defaultVal) {\n      var config = this.config || {};\n      var val = config[key] || defaultVal;\n\n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n    getArrProp: function getArrProp(key, defaultVal) {\n      var config = this.config || {};\n      var val = config[key] || defaultVal;\n      if (!val) return null;\n\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n    createProton: function createProton(canvas, width, height) {\n      var num = this.getProp(\"num\", [5, 8]);\n      var rps = this.getProp(\"rps\", [0.1, 0.2]);\n      var mass = this.getProp(\"mass\", 1);\n      var radius = this.getProp(\"radius\", [10, 30]);\n      var life = this.getProp(\"life\", [2, 3]);\n      var body = this.getProp(\"body\");\n      var position = this.getProp(\"position\");\n      var v = this.getProp(\"v\", [2, 3]);\n      var tha = this.getProp(\"tha\", [-15, 15]);\n      var alpha = this.getArrProp(\"alpha\");\n      var scale = this.getArrProp(\"scale\");\n      var color = this.getArrProp(\"color\");\n      var cross = this.getProp(\"cross\", \"dead\");\n      var random = this.getProp(\"random\");\n      var rotate = this.getArrProp(\"rotate\");\n      var g = this.getProp(\"g\");\n      var f = this.getArrProp(\"f\");\n      var emitterV = this.getProp(\"emitter\");\n      this.proton = new Proton();\n      var emitter;\n\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n\n      emitter.rate = new Proton.Rate(num, rps);\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n      var pos;\n\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height));\n      } else if (_typeof(position) === \"object\") {\n        pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height));\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n\n      emitter.addInitialize(pos); /// behaviour\n\n      var alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n      var scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n      var colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(colors);\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n\n      var zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      var crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n      random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n      var renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer: function createRenderer(canvas) {\n      var width = canvas.width;\n      var height = canvas.height;\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n      var onUpdate = this.getProp(\"onUpdate\");\n\n      if (onUpdate) {\n        renderer.onProtonUpdate = function () {\n          onUpdate(context, width, height);\n        };\n      }\n\n      var onParticleCreated = this.getProp(\"onParticleCreated\");\n\n      if (onParticleCreated) {\n        renderer.onParticleCreated = function (particle) {\n          onParticleCreated(context, particle);\n        };\n      }\n\n      var onParticleUpdate = this.getProp(\"onParticleUpdate\");\n\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = function (particle) {\n          onParticleUpdate(context, particle);\n        };\n      }\n\n      return renderer;\n    },\n    renderProton: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};",{"version":3,"sources":["CustomParticles.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,OAAA,UAAA;AACA,OAAA,MAAA,MAAA,eAAA;AACA,OAAA,UAAA,MAAA,aAAA;AAEA,IAAA,MAAA,GAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAAA;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,EAAA,EAAA,OAFA;AAGA,IAAA,GAAA,EAAA,MAHA;AAIA,IAAA,KAAA,EAAA,MAJA;AAKA,IAAA,wBAAA,EAAA,MALA;AAMA,IAAA,MAAA,EAAA;AANA,GALA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AACA,WAAA,YAAA,CAAA,MAAA;AACA,MAAA,UAAA,CAAA,GAAA,CAAA,KAAA,YAAA;AACA,KAJA;AAKA,IAAA,YALA,8BAKA;AAAA,UAAA,KAAA,QAAA,KAAA;AAAA,UAAA,MAAA,QAAA,MAAA;AACA,WAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,WAAA,kBAAA,CAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AACA,WAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA;AACA,KATA;AAUA,IAAA,eAVA,2BAUA,CAVA,EAUA,CAAA,CAVA;AAYA,IAAA,qBAZA,mCAYA;AACA,UAAA,wBAAA,GACA,KAAA,wBAAA,IAAA,KAAA,SAAA,IAAA,aADA;AAEA,aAAA,wBAAA;AACA,KAhBA;AAkBA,IAAA,OAlBA,mBAkBA,GAlBA,EAkBA,UAlBA,EAkBA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,IAAA,UAAA;;AAEA,UAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,GAAA;AACA;AACA,KA3BA;AA6BA,IAAA,UA7BA,sBA6BA,GA7BA,EA6BA,UA7BA,EA6BA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,IAAA,UAAA;AACA,UAAA,CAAA,GAAA,EAAA,OAAA,IAAA;;AAEA,UAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA;AACA,eAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA;AACA,KAvCA;AAyCA,IAAA,YAzCA,wBAyCA,MAzCA,EAyCA,KAzCA,EAyCA,MAzCA,EAyaAAA,EAAA;AACA,OAFA,MAEA;AACA,QAAA,OAAA,GAAA,IAAA,MAAA,CAAA,OAAA,EAAA;AACA;;AACA,MAAA,OAAA,CAAA,IAAA,GAAA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AAEA,MAAA,OAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,MAAA,OAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,MAAA,OAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,MAAA,OAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,EAAA,OAAA,CAAA;AACA,UAAA,IAAA,EAAA,OAAA,CAAA,aAAA,CAAA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAEA,UAAA,GAAA;;AACA,UAAA,QAAA,KAAA,KAAA,IAAA,QAAA,KAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,IAAA,MAAA,CAAA,QAAA,CACA,IAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CADA,CAAA;AAGA,OAJA,MAIA,IAAA,QAAA,QAAA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,GAAA,IAAA,MAAA,CAAA,QAAA,CACA,IAAA,MAAA,CAAA,QAAA,CACA,QAAA,CAAA,CADA,EAEA,QAAA,CAAA,CAFA,EAGA,QAAA,CAAA,KAHA,EAIA,QAAA,CAAA,MAJA,CADA,CAAA;AAQA,OATA,MASA;AACA,QAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,KAAA,GAAA,CAAA;AACA,QAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA;;AAEA,MAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAtDA,CAwDA;;AACA,UAAA,MAAA,GAAA,KAAA,GACA,IAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CADA,GAEA,IAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAFA;AAGA,UAAA,MAAA,GAAA,KAAA,GACA,IAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CADA,GAEA,IAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,GAAA,CAFA;AAGA,UAAA,MAAA,GAAA,KAAA,GACA,IAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CADA,GAEA,IAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAFA;AAIA,MAAA,OAAA,CAAA,YAAA,CAAA,MAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,MAAA;AACA,UAAA,CAAA,IAAA,EAAA,OAAA,CAAA,YAAA,CAAA,MAAA;;AAEA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,CAAA,CAAA,KAAA,IAAA,IAAA,MAAA,CAAA,CAAA,CAAA,KAAA,QAAA,EAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,MAAA,EAAA;AACA,SAFA,MAEA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,UAAA,IAAA,GAAA,IAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACA,UAAA,kBAAA,GAAA,IAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,MAAA,OAAA,CAAA,YAAA,CAAA,kBAAA;AAEA,MAAA,MAAA,IACA,OAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,WAAA,CAAA,MAAA,EAAA,MAAA,EAAA,IAAA,CAAA,CADA;AAEA,MAAA,CAAA,IAAA,OAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,MAAA,CAAA,IAAA,OAAA,CAAA,YAAA,CAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA,CAAA,IAAA;AACA,WAAA,MAAA,CAAA,UAAA,CAAA,OAAA;AAEA,UAAA,QAAA,GAAA,KAAA,cAAA,CAAA,MAAA,CAAA;AACA,WAAA,MAAA,CAAA,WAAA,CAAA,QAAA;AAEA,WAAA,OAAA,GAAA,OAAA;AACA,WAAA,kBAAA,GAAA,kBAAA;AACA,KAzIA;AA2IA,IAAA,cA3IA,0BA2IA,MA3IA,EA2IA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,MAAA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,UAAA,QAAA,GAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA;AAEA,UAAA,QAAA,GAAA,KAAA,OAAA,CAAA,UAAA,CAAA;;AACA,UAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,cAAA,GAAA,YAAA;AACA,UAAA,QAAA,CAAA,OAAA,EAAA,KAAA,EAAA,MAAA,CAAA;AACA,SAFA;AAGA;;AAEA,UAAA,iBAAA,GAAA,KAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,UAAA,iBAAA,EAAA;AACA,QAAA,QAAA,CAAA,iBAAA,GAAA,UAAA,QAAA,EAAA;AACA,UAAA,iBAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACA,SAFA;AAGA;;AAEA,UAAA,gBAAA,GAAA,KAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,UAAA,gBAAA,EAAA;AACA,QAAA,QAAA,CAAA,gBAAA,GAAA,UAAA,QAAA,EAAA;AACA,UAAA,gBAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACA,SAFA;AAGA;;AAEA,aAAA,QAAA;AACA,KAvKA;AAwKA,IAAA,YAxKA,0BAwKA;AACA,WAAA,MAAA,IAAA,KAAA,MAAA,CAAA,MAAA,EAAA;AACA;AA1KA,GAbA;AAyLA,EAAA,aAzLA,2BAyLA;AACA,QAAA;AACA,WAAA,MAAA,CAAA,OAAA;AACA,MAAA,UAAA,CAAA,MAAA,CAAA,KAAA,YAAA;AACA,KAHA,CAGA,OAAA,CAAA,EAAA,CAAA;AACA;AA9LA,CAAA","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"getCompositeOperation()\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    getCompositeOperation() {\n      const globalCompositeOperation =\n        this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n\n    getProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      \n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n\n    getArrProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (!val) return null;\n\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n\n    createProton(canvas, width, height) {\n      const num = this.getProp(\"num\", [5, 8]);\n      const rps = this.getProp(\"rps\", [0.1, 0.2]);\n      const mass = this.getProp(\"mass\", 1);\n      const radius = this.getProp(\"radius\", [10, 30]);\n      const life = this.getProp(\"life\", [2, 3]);\n      const body = this.getProp(\"body\");\n      const position = this.getProp(\"position\");\n      const v = this.getProp(\"v\", [2, 3]);\n      const tha = this.getProp(\"tha\", [-15, 15]);\n      const alpha = this.getArrProp(\"alpha\");\n      const scale = this.getArrProp(\"scale\");\n      const color = this.getArrProp(\"color\");\n      const cross = this.getProp(\"cross\", \"dead\");\n      const random = this.getProp(\"random\");\n      const rotate = this.getArrProp(\"rotate\");\n      const g = this.getProp(\"g\");\n      const f = this.getArrProp(\"f\");\n      const emitterV = this.getProp(\"emitter\");\n\n      this.proton = new Proton();\n      let emitter;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n\n      let pos;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        );\n      } else if (typeof position === \"object\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(\n            position.x,\n            position.y,\n            position.width,\n            position.height\n          )\n        );\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      const alphaB = alpha\n        ? new Proton.Alpha(alpha[0], alpha[1])\n        : new Proton.Alpha(0, 1);\n      const scaleB = scale\n        ? new Proton.Scale(scale[0], scale[1])\n        : new Proton.Scale(1, 0.2);\n      const colorB = color\n        ? new Proton.Color(color[0], color[1])\n        : new Proton.Color(colors);\n\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n\n      const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      random &&\n        emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    createRenderer(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      const onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = () => {\n          onUpdate(context, width, height);\n        };\n      }\n\n      const onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = particle => {\n          onParticleCreated(context, particle);\n        };\n      }\n\n      const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = particle => {\n          onParticleUpdate(context, particle);\n        };\n      }\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}