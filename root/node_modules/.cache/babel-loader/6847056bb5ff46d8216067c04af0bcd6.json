{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\LinesParticles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\particles\\LinesParticles.vue","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\nexport default {\n  name: \"LinesParticles\",\n  components: {\n    CanvasComp: CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited: function canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize: function canvasResize(_ref) {\n      var width = _ref.width,\n          height = _ref.height;\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown: function canvasMouseDown(e) {},\n    createProton: function createProton(canvas) {\n      var width = canvas.width;\n      var height = canvas.height;\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 250);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4));\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(1.5), new Proton.Span(0, 360), \"polar\"));\n      var mouseObj = {\n        x: width / 2,\n        y: height / 2\n      };\n      var attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n      var crossZoneBehaviour = new Proton.CrossZone(new Proton.RectZone(0, 0, canvas.width, canvas.height), \"cross\");\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n      emitter.p.x = canvas.width / 2;\n      emitter.p.y = canvas.height / 2;\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer: function createRenderer(canvas) {\n      var _this = this;\n\n      var context = canvas.getContext(\"2d\");\n      var renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = function () {\n        context.fillStyle = getColor(_this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleUpdate = function (particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.lineWidth = 1;\n        context.moveTo(particle.old.p.x, particle.old.p.y);\n        context.lineTo(particle.p.x, particle.p.y);\n        context.closePath();\n        context.stroke();\n      };\n\n      return renderer;\n    },\n    renderProton: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};",{"version":3,"sources":["LinesParticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"LinesParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 250);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      \n      const mouseObj = {\n        x: width / 2,\n        y: height / 2\n      };\n      const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n      emitter.p.x = canvas.width / 2;\n      emitter.p.y = canvas.height / 2;\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.lineWidth = 1;\n        context.moveTo(particle.old.p.x, particle.old.p.y);\n        context.lineTo(particle.p.x, particle.p.y);\n        context.closePath();\n        context.stroke();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg/particles"}]}