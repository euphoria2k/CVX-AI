{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\ParticlesBg.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\particles-bg-vue\\src\\particles-bg\\ParticlesBg.vue","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles: ColorParticles,\n    CircleParticles: CircleParticles,\n    CobwebParticles: CobwebParticles,\n    ThickParticles: ThickParticles,\n    LinesParticles: LinesParticles,\n    FountainParticles: FountainParticles,\n    CustomParticles: CustomParticles,\n    PolygonParticles: PolygonParticles,\n    SquareParticles: SquareParticles,\n    TadpoleParticles: TadpoleParticles,\n    BallParticles: BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data: function data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum: function getNum() {\n      return +this.num;\n    },\n    getRandom: function getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n\n      return this.random.getResult();\n    },\n    getFromList: function getFromList() {\n      if (!this.list) return this.getRandom();\n      var item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n      return item;\n    },\n    transformName: function transformName(name) {\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n    setParticles: function setParticles() {\n      this.particles = this.transformName(this.type);\n\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created: function created() {\n    this.setParticles();\n  },\n  beforeMount: function beforeMount() {}\n};",{"version":3,"sources":["ParticlesBg.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <component\n    :is=\"particles\"\n    :globalCompositeOperation=\"globalCompositeOperation\"\n    :num=\"getNum()\"\n    :bg=\"bg\"\n    :color=\"color\"\n    :canvas=\"canvas\"\n    :config=\"config\"\n  ></component>\n</template>\n\n<script>\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\n\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n\n    getFromList(){\n      if(!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n\n      return item;\n    },\n\n    transformName(name){\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"sourceRoot":"node_modules/particles-bg-vue/src/particles-bg"}]}