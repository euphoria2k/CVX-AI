{"remainingRequest":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Dashboards\\Analytics\\chart2.js","dependencies":[{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\src\\DemoPages\\Dashboards\\Analytics\\chart2.js","mtime":1558328756000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\HP\\Documents\\CVX_AI_WebUI\\root\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//Importing Line class from the vue-chartjs wrapper\nimport { Line } from 'vue-chartjs'; //Exporting this so it can be used in other components\n\nexport default {\n  extends: Line,\n  data: function data() {\n    return {\n      datacollection: {\n        //Data to be represented on x-axis\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August'],\n        datasets: [{\n          label: 'My First dataset',\n          fill: true,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(48, 177, 255, 0.2)',\n          borderColor: '#30b1ff',\n          borderCapStyle: 'round',\n          borderDash: [],\n          borderWidth: 4,\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'round',\n          pointBorderColor: '#30b1ff',\n          pointBackgroundColor: '#ffffff',\n          pointBorderWidth: 5,\n          pointHoverRadius: 6,\n          pointHoverBackgroundColor: '#ffffff',\n          pointHoverBorderColor: '#30b1ff',\n          pointHoverBorderWidth: 2,\n          pointRadius: 4,\n          pointHitRadius: 10,\n          data: [46, 55, 59, 80, 81, 38, 65, 59, 80]\n        }]\n      },\n      //Chart.js options that controls the appearance of the chart\n      options: {\n        layout: {\n          padding: {\n            left: 0,\n            right: 8,\n            top: 0,\n            bottom: 0\n          }\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              display: false,\n              beginAtZero: true\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              display: false\n            },\n            gridLines: {\n              display: false\n            }\n          }]\n        },\n        legend: {\n          display: false\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    //renderChart function renders the chart with the datacollection and options object.\n    this.renderChart(this.datacollection, this.options);\n  }\n};",null]}